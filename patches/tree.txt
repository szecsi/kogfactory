FIXED: Scene gets gl both as property and parameter to methods
DONE: WebGL2RenderingContext full from websocket to patch 110
DONE: WebGL2RenderingContext add Texture3D

# add to WebGL2RenderingContext
  import org.khronos.webgl.Uint8Array
  import org.w3c.dom.ImageBitmap

  fun texImage3D(target: Int, level: Int, internalformat: Int, width: Int, height: Int, depth: Int, border: Int, format: Int, type: Int, source: ImageBitmap)
  fun texImage3D(target: Int, level: Int, internalformat: Int, width: Int, height: Int, depth: Int, border: Int, format: Int, type: Int, source: Uint8Array)  


ppt:
vectors - kotlin

kog.010.020.0030-Scene-instance-and-canvas-resize.patch #UP register resize callback

ait patches
trafo-vs.glsl-translate only
use trafo instead of idle
set-position-uniform-by-location-handle
t-dt (scene property time in seconds)

webglmath #UP  - array uniforms, Sampler3D -> WebGLRenderingContext2
webglmath array uniform naming[0] #UP
webglmath plus/plusAssign ambiguity #UP

**scene-set-position-uniform-by-vector-commit

trafo-vs.glsl-by matrix
**set-modelmatrix-uniform-by-mat4-commit

lose manual triangle resources and drawing

program-to-uniformprovider
material
mesh
gameobject class #remove constructor parameters
gameobject update
scene-to-uniformprovider (time to uniform delegate)

orthocamera
othocamera in scene
trafo-vs.glsl with camera trafo

*3gr-earlier start
texturedquadgeometry
texture2d
textured-fs

alpha-enable

texture-anim-vs
*3gr-earlier end

gameobject-move #UP motion inner class
gameobject-parent #new
gameobject-physics

perspective-camera
perspective-camera-in-scene
perspective-camera-events
perspective-camera-ahead-right-up-stride

quad.vs with raydir
background-fs
texturecube
environment bg in scene
raydir in camera

*ray brach starts here

infinitegroundgeometry
perspective texture division in fs

gameobject-3d-rot
gameobject-parent

camera-parent (local vs world)

out worldPosition
out worldNormal

envmap-fs

shading
postproc

-------------

ray

Texture3D #