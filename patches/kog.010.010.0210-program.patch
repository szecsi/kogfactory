From f76b16b06ddc75a0209bc7a29a17fc75c640f654 Mon Sep 17 00:00:00 2001
From: szecsi <szecsi.laszlo@gmail.com>
Date: Tue, 9 Feb 2021 06:45:33 +0100
Subject: [PATCH] program

---
 client/src/main/kotlin/Program.kt | 31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)
 create mode 100644 client/src/main/kotlin/Program.kt

diff --git a/client/src/main/kotlin/Program.kt b/client/src/main/kotlin/Program.kt
new file mode 100644
index 0000000..3719a84
--- /dev/null
+++ b/client/src/main/kotlin/Program.kt
@@ -0,0 +1,31 @@
+import org.khronos.webgl.WebGLRenderingContext as GL
+
+class Program(
+  val gl : WebGL2RenderingContext,
+  val vertexShader : Shader,
+  val fragmentShader : Shader,
+  attributeBindings : Array<String> = Program.PNT ) {
+
+  val glProgram = gl.createProgram() ?: throw Error("Could not create WebGL program.")
+
+  init {
+    gl.attachShader(glProgram, vertexShader.glShader) //#attach# OpenGL phraseology: you attach resources to one another
+    gl.attachShader(glProgram, fragmentShader.glShader)
+
+    var attributeIndex = 0
+    attributeBindings.forEach{
+      gl.bindAttribLocation(glProgram, attributeIndex++, it) //#vertex shader input 'it' is taken from vertex record at 'attributeIndex' 
+    }    
+
+    gl.linkProgram(glProgram)
+    if (gl.getProgramParameter(glProgram, GL.LINK_STATUS) == false) {
+      throw Error("Could not link shaders [vertex shader: ${vertexShader.sourceUrl}]:[fragment shader: ${fragmentShader.sourceUrl}\n${gl.getProgramInfoLog(this.glProgram)}")
+    }
+
+  }
+
+  companion object{ //#companion object# this is how you create class static members
+    val PC = arrayOf("vertexPosition", "vertexColor")
+    val PNT = arrayOf("vertexPosition", "vertexNormal", "vertexTexCoord")
+  }
+}
\ No newline at end of file
-- 
2.16.1.windows.1

