From 15900f2b3378896d5ea2a07bf12ea9bd06b5a1d5 Mon Sep 17 00:00:00 2001
From: szecsi <szecsi.laszlo@gmail.com>
Date: Mon, 8 Feb 2021 00:11:10 +0100
Subject: [PATCH] WebGL2 rendering context

---
 client/src/main/kotlin/WebGL2RenderingContext.kt | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 client/src/main/kotlin/WebGL2RenderingContext.kt

diff --git a/client/src/main/kotlin/WebGL2RenderingContext.kt b/client/src/main/kotlin/WebGL2RenderingContext.kt
new file mode 100644
index 0000000..d66c1d9
--- /dev/null
+++ b/client/src/main/kotlin/WebGL2RenderingContext.kt
@@ -0,0 +1,15 @@
+import org.khronos.webgl.WebGLRenderingContext as GL
+
+abstract class VertexArray {}
+
+abstract external class WebGL2RenderingContext : GL { //#external# Extend Kotlin's built-in WebGL context interface with WebGL2 methods. We know these are there in JS, and now the Kotlin2JS transpiler knows, too. ˙HUN˙ Kiterjesztjük a Kotlin beépített WebGL interfészét WebGL2-es metódusokkal. Tudjuk, hogy JS-ben ezek megvannak, és most más a Kotlin2JS fordító is tudja.
+  fun drawBuffers(buffers: IntArray)
+  fun drawElementsInstanced(mode: Int, count: Int, type: Int, offset: Int, instanceCount: Int)
+  fun readBuffer(src: Int)
+  fun renderbufferStorageMultisample(target: Int, samples: Int, internalformat: Int, width: Int, height: Int)
+  fun vertexAttribDivisor(index: Int, divisor: Int)
+  fun vertexAttribIPointer(index: Int, size: Int, type: Int, stride: Int, offset: Int)
+  fun createVertexArray() : VertexArray
+  fun bindVertexArray(vertexArray: VertexArray?)
+}
+
-- 
2.16.1.windows.1

